{
  "id": "guide/store",
  "title": "Store overview",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/index.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n<div class=\"content\">\n<h1 id=\"store-overview\">Store overview<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store#store-overview\"><i class=\"material-icons\">link</i></a></h1>\n<p>Store is RxJS powered state management for Angular applications, inspired by Redux. Store is a controlled state container designed to help write performant,consistent applications on top of Angular.</p>\n<h2 id=\"core-principles\">Core Principles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store#core-principles\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li>State is a single, immutable data structure that emphasizes type-safety, serializability, and testability.</li>\n<li><a href=\"guide/store/actions\">Actions</a> describe unique events that are dispatched to trigger state changes and/or side effects.</li>\n<li>State changes are handled by pure functions called <a href=\"guide/store/reducers\">reducers</a> that take the previous state and the next action to compute a new state.</li>\n<li><a href=\"guide/store/selectors\">Selectors</a> are pure functions used to select, derive and compose pieces of state.</li>\n<li>State accessed with the <code><a href=\"api/store/Store\" class=\"code-anchor\">Store</a></code>, an observable of state and an observer of actions.</li>\n</ul>\n<h2 id=\"installation\">Installation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store#installation\"><i class=\"material-icons\">link</i></a></h2>\n<code-example language=\"sh\">\nnpm install @ngrx/store\n</code-example>\n<code-example language=\"sh\">\nyarn add @ngrx/store\n</code-example>\n<h2 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/store#example\"><i class=\"material-icons\">link</i></a></h2>\n<p>Create a reducer function for each data type you have in your application. The\ncombination of these reducers will make up your application state:</p>\n<code-example language=\"ts\">\n// counter.ts\nimport { <a href=\"api/store/Action\" class=\"code-anchor\">Action</a> } from '@ngrx/store';\n\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const RESET = 'RESET';\n\nconst initialState = 0;\n\nexport function counterReducer(<a href=\"api/store-devtools/StoreDevtools#state\" class=\"code-anchor\">state</a>: number = initialState, action: <a href=\"api/store/Action\" class=\"code-anchor\">Action</a>) {\n  switch (action.type) {\n    case INCREMENT:\n      return <a href=\"api/store-devtools/StoreDevtools#state\" class=\"code-anchor\">state</a> + 1;\n\n    case DECREMENT:\n      return <a href=\"api/store-devtools/StoreDevtools#state\" class=\"code-anchor\">state</a> - 1;\n\n    case RESET:\n      return 0;\n\n    default:\n      return <a href=\"api/store-devtools/StoreDevtools#state\" class=\"code-anchor\">state</a>;\n  }\n}\n</code-example>\n<p>To register the state container within your application, import the reducers and\nuse the <code>StoreModule.forRoot</code> function in the <code>imports</code> array of the <code>@NgModule</code>\ndecorator for your <code>AppModule</code>.</p>\n<code-example language=\"ts\">\nimport { NgModule } from '@angular/core';\nimport { <a href=\"api/store/StoreModule\" class=\"code-anchor\">StoreModule</a> } from '@ngrx/store';\nimport { counterReducer } from './counter';\n\n@NgModule({\n  imports: [StoreModule.forRoot({ count: counterReducer })],\n})\nexport class AppModule {}\n</code-example>\n<p>You can then inject the <code><a href=\"api/store/Store\" class=\"code-anchor\">Store</a></code> service into your components and services. Use\n<code><a href=\"api/store/select\" class=\"code-anchor\">select</a></code> operator to <em>select</em> slice(s) of state:</p>\n<code-example language=\"ts\">\nimport { Component } from '@angular/core';\nimport { <a href=\"api/store/Store\" class=\"code-anchor\">Store</a>, <a href=\"api/store/select\" class=\"code-anchor\">select</a> } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { INCREMENT, DECREMENT, RESET } from './counter';\n\ninterface AppState {\n  count: number;\n}\n\n@Component({\n  selector: 'app-my-counter',\n  template: `\n    &#x3C;button (click)=\"increment()\">Increment&#x3C;/button>\n    &#x3C;div>Current Count: {{ count$ | async }}&#x3C;/div>\n    &#x3C;button (click)=\"decrement()\">Decrement&#x3C;/button>\n\n    &#x3C;button (click)=\"reset()\">Reset Counter&#x3C;/button>\n  `,\n})\nexport class MyCounterComponent {\n  count$: Observable&#x3C;number>;\n\n  constructor(private store: <a href=\"api/store/Store\" class=\"code-anchor\">Store</a>&#x3C;AppState>) {\n    this.count$ = store.pipe(<a href=\"api/store/select\" class=\"code-anchor\">select</a>('count'));\n  }\n\n  increment() {\n    this.store.dispatch({ <a href=\"api/store/Action#type\" class=\"code-anchor\">type</a>: INCREMENT });\n  }\n\n  decrement() {\n    this.store.dispatch({ <a href=\"api/store/Action#type\" class=\"code-anchor\">type</a>: DECREMENT });\n  }\n\n  reset() {\n    this.store.dispatch({ <a href=\"api/store/Action#type\" class=\"code-anchor\">type</a>: RESET });\n  }\n}\n</code-example>\n\n</div>\n\n<!-- links to this doc:\n - docs\n - guide/effects\n - guide/router-store\n - guide/store-devtools\n - index\n-->\n<!-- links from this doc:\n - api/store-devtools/StoreDevtools#state\n - api/store/Action\n - api/store/Action#type\n - api/store/Store\n - api/store/StoreModule\n - api/store/select\n - guide/store#core-principles\n - guide/store#example\n - guide/store#installation\n - guide/store#store-overview\n - guide/store/actions\n - guide/store/reducers\n - guide/store/selectors\n - https://github.com/ngrx/platform/edit/master/projects/ngrx.io/content/guide/store/index.md?message=docs%3A%20describe%20your%20change...\n-->"
}